{"version":3,"sources":["components/Section/index.js","components/Section/Section.jsx","components/FeedbackOptions/index.js","components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/index.js","components/Statistics/Statistics.jsx","components/Notification/index.js","components/Notification/Notification.jsx","components/App.jsx","index.js"],"names":["Section","title","children","FeedbackOptions","onLeaveFeedback","type","name","onClick","Statistics","good","neutral","bad","total","positivePercentage","Notification","message","App","state","leaveFeedback","e","target","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Component","ReactDOM","render","document","getElementById"],"mappings":"gPAEeA,ECCC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,iCACE,4BAAKD,GACJC,ICLQC,ECCS,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,gBACzB,OACE,6BACE,4BAAQC,KAAK,SAASC,KAAK,OAAOC,QAASH,GAA3C,QAGA,4BAAQC,KAAK,SAASC,KAAK,UAAUC,QAASH,GAA9C,WAGA,4BAAQC,KAAK,SAASC,KAAK,MAAMC,QAASH,GAA1C,SCVSI,ECCI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,6BACE,oCACQ,8BAAOJ,IAEf,uCACW,8BAAOC,IAElB,mCACO,8BAAOC,IAEd,qCACS,8BAAOC,IAEhB,iDACqB,8BAAiB,IAAVA,EAAc,GAAKC,EAA1B,QCjBZC,ECCM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,4BAAKA,ICwDCC,G,kNApDbC,MAAQ,CACNR,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPO,cAAgB,SAAAC,GAAM,IACZb,EAASa,EAAEC,OAAXd,KAER,EAAKe,UAAS,SAAAC,GACZ,OAAO,eACJhB,EAAOgB,EAAUhB,GAAQ,O,EAKhCiB,mBAAqB,YACnB,OAD+C,EAAzBd,KAAyB,EAAnBC,QAAmB,EAAVC,K,EAIvCa,gCAAkC,YAA6B,IAA1Bf,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,QAASC,EAAU,EAAVA,IAClD,OAAOc,KAAKC,MAAc,IAAPjB,GAAeA,EAAOC,EAAUC,K,uDAG3C,IAAD,EACwBgB,KAAKV,MAA5BR,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBC,EAAQe,KAAKJ,mBAAmBI,KAAKV,OACrCJ,EAAqBc,KAAKH,gCAAgCG,KAAKV,OAErE,OACE,oCACE,kBAAC,EAAD,CAAShB,MAAM,yBACb,kBAAC,EAAD,CAAiBG,gBAAiBuB,KAAKT,iBAEzC,kBAAC,EAAD,CAASjB,MAAM,cACF,IAAVW,EACC,kBAAC,EAAD,CAAcG,QAAQ,sBAEtB,kBAAC,EAAD,CACEN,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,U,GA5ChBe,cCHlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.369f379c.chunk.js","sourcesContent":["import Section from './Section';\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.object,\r\n};\r\n\r\nexport default Section;\r\n","import FeedbackOptions from './FeedbackOptions';\r\n\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FeedbackOptions = ({ onLeaveFeedback }) => {\r\n  return (\r\n    <div>\r\n      <button type=\"button\" name=\"good\" onClick={onLeaveFeedback}>\r\n        Good\r\n      </button>\r\n      <button type=\"button\" name=\"neutral\" onClick={onLeaveFeedback}>\r\n        Neutral\r\n      </button>\r\n      <button type=\"button\" name=\"bad\" onClick={onLeaveFeedback}>\r\n        Bad\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import Statistics from './Statistics';\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <div>\r\n      <p>\r\n        Good: <span>{good}</span>\r\n      </p>\r\n      <p>\r\n        Neutral: <span>{neutral}</span>\r\n      </p>\r\n      <p>\r\n        Bad: <span>{bad}</span>\r\n      </p>\r\n      <p>\r\n        Total: <span>{total}</span>\r\n      </p>\r\n      <p>\r\n        Positive feedback: <span>{total === 0 ? '' : positivePercentage}%</span>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import Notification from './Notification';\r\n\r\nexport default Notification;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => {\r\n  return <h3>{message}</h3>;\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Notification;\r\n","import React, { Component } from 'react';\r\nimport Section from './Section';\r\nimport FeedbackOptions from './FeedbackOptions';\r\nimport Statistics from './Statistics';\r\nimport Notification from './Notification';\r\nimport './App.scss';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  leaveFeedback = e => {\r\n    const { name } = e.target;\r\n\r\n    this.setState(prevState => {\r\n      return {\r\n        [name]: prevState[name] + 1,\r\n      };\r\n    });\r\n  };\r\n\r\n  countTotalFeedback = ({ good, neutral, bad }) => {\r\n    return good + neutral + bad;\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = ({ good, neutral, bad }) => {\r\n    return Math.round((good * 100) / (good + neutral + bad));\r\n  };\r\n\r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n    const total = this.countTotalFeedback(this.state);\r\n    const positivePercentage = this.countPositiveFeedbackPercentage(this.state);\r\n\r\n    return (\r\n      <>\r\n        <Section title=\"Please leave feedback\">\r\n          <FeedbackOptions onLeaveFeedback={this.leaveFeedback} />\r\n        </Section>\r\n        <Section title=\"Statistics\">\r\n          {total === 0 ? (\r\n            <Notification message=\"No feedback given\" />\r\n          ) : (\r\n            <Statistics\r\n              good={good}\r\n              neutral={neutral}\r\n              bad={bad}\r\n              total={total}\r\n              positivePercentage={positivePercentage}\r\n            />\r\n          )}\r\n        </Section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}